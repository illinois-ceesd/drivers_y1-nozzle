name: CI
on:
    push:
        branches:
        - main
    pull_request:
    schedule:
        - cron:  '17 3 * * 0'

jobs:
    flake8:
        name: Flake8
        runs-on: ubuntu-latest
        steps:
        -   uses: actions/checkout@v2
        -
            uses: actions/setup-python@v1
            with:
                # matches compat target in setup.py
                python-version: '3.8'
        -   name: "Flake8 test"
            run: |
                python -m pip install flake8 flake8-quotes
                python -m flake8 nozzle.py

    emirge:
        name: Emirge installation
        runs-on: ${{ matrix.os }}
        strategy:
          matrix:
            os: [ubuntu-latest, macos-latest]

        steps:
        - uses: actions/checkout@v2
        - name: Install emirge
          run: |
            [[ $(uname) == Linux ]] && sudo apt-get update && sudo apt-get install -y openmpi-bin libopenmpi-dev
            [[ $(uname) == Darwin ]] && brew update && brew install mpich
            ./buildMirge.sh

        - name: Run pylint
          run: |
            source emirge/config/activate_env.sh
            cd emirge/mirgecom
            git branch
            cd ../../
            python -m pip install wheel
            python -m pip install pylint pyyaml
            curl -L -O https://raw.githubusercontent.com/inducer/ci-support/master/run-pylint.py
            python run-pylint.py --yaml-rcfile=.pylintrc.yml "$(basename $GITHUB_REPOSITORY)" nozzle.py && echo "Pylint found no errors."

            #pylint:
            #name: Pylint
            #runs-on: ubuntu-latest
            #steps:
            #- uses: actions/checkout@v2
            #-
            #uses: actions/setup-python@v1
            #with:
            #python-version: '3.x'
            #- name: Install
            #run: |
            #. .ci-support/install.sh
            #
            #- name: Pylint test
            #run: |
            #MINIFORGE_INSTALL_DIR=.miniforge3
            #. "$MINIFORGE_INSTALL_DIR/bin/activate" testing
            #python -m pip install wheel
            #python -m pip install pylint pyyaml
            #curl -L -O https://raw.githubusercontent.com/inducer/ci-support/master/run-pylint.py
            #python run-pylint.py --yaml-rcfile=.pylintrc.yml "$(basename $GITHUB_REPOSITORY)" nozzle.py && echo "Pylint found no errors."
